"use strict";(self.webpackChunk_alauda_ui=self.webpackChunk_alauda_ui||[]).push([[4588],{"./stories/steps/progress.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Progress:()=>Progress,__namedExportsOrder:()=>__namedExportsOrder,default:()=>progress_stories});var fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),src=__webpack_require__("./src/index.ts");let BasicVerticalDemoComponent=class BasicVerticalDemoComponent{constructor(){this.orientation="vertical",this.currentIndex=0,this.selectable=!1,this.steps=[{label:"Step 1"},{label:"Step 2",description:"This is description"},{label:"Step 3"},{label:"Step 4"}]}currentIndexChange(index){this.currentIndex=index}selectedIndexChange(index){this.selectedIndex=index}start(){this.setState(src.uki.Pending)}complete(){this.setState(src.uki.Done)}error(){this.setState(src.uki.Error)}setState(state){this.steps[this.currentIndex].state=state,this.steps=[...this.steps]}};BasicVerticalDemoComponent=(0,tslib_es6.Cg)([(0,core.Component)({template:'\n    <aui-steps\n      [orientation]="orientation"\n      [type]="\'progress\'"\n      [selectable]="selectable"\n      [steps]="steps"\n      (currentIndexChange)="currentIndexChange($event)"\n      (selectedIndexChange)="selectedIndexChange($event)"\n    ></aui-steps>\n    <div style="margin-top: 50px">\n      <button\n        aui-button="primary"\n        (click)="start()"\n      >\n        Start\n      </button>\n      <button\n        aui-button="primary"\n        (click)="complete()"\n      >\n        Complete\n      </button>\n      <button\n        aui-button="primary"\n        (click)="error()"\n      >\n        Set Error\n      </button>\n    </div>\n    <div>Selectable: <aui-switch [(ngModel)]="selectable"></aui-switch></div>\n    <div>\n      Selected Index: {{ selectedIndex }}, Current index: {{ currentIndex }}\n    </div>\n  ',changeDetection:core.ChangeDetectionStrategy.OnPush,standalone:!1})],BasicVerticalDemoComponent);const progress_stories={title:"Example/Steps",component:BasicVerticalDemoComponent,decorators:[(0,dist.moduleMetadata)({declarations:[BasicVerticalDemoComponent],imports:[fesm2022_forms.YN,src.UXU,src.tmq,src.No7]})]},Progress={name:"Progress",parameters:{docs:{source:{type:"code",code:'\n        @Component({\n            template: \n              <aui-steps\n                [orientation]="orientation"\n                [type]="\'progress\'"\n                [selectable]="selectable"\n                [steps]="steps"\n                (currentIndexChange)="currentIndexChange($event)"\n                (selectedIndexChange)="selectedIndexChange($event)"\n              ></aui-steps>\n              <div style="margin-top: 50px">\n                <button aui-button="primary" (click)="start()">Start</button>\n                <button aui-button="primary" (click)="complete()">Complete</button>\n                <button aui-button="primary" (click)="error()">Set Error</button>\n              </div>\n              <div>\n                Selectable: <aui-switch [(ngModel)]="selectable"></aui-switch>\n              </div>\n              <div>\n                Selected Index: {{ selectedIndex }}, Current index: {{ currentIndex }}\n              </div>\n            ,\n          })\n          export class BasicVerticalDemoComponent {\n            orientation: StepsOrientation = \'vertical\';\n            currentIndex = 0;\n            selectedIndex: number;\n            selectable = false;\n            steps: StepItem[] = [\n              {\n                label: \'Step 1\',\n              },\n              {\n                label: \'Step 2\',\n              },\n              {\n                label: \'Step 3\',\n              },\n              {\n                label: \'Step 4\',\n              },\n            ];\n            currentIndexChange(index: number) {\n              this.currentIndex = index;\n            }\n            selectedIndexChange(index: number) {\n              this.selectedIndex = index;\n            }\n            start() {\n              this.setState(StepState.Pending);\n            }\n            complete() {\n              this.setState(StepState.Done);\n            }\n            error() {\n              this.setState(StepState.Error);\n            }\n            private setState(state: StepState) {\n              this.steps[this.currentIndex].state = state;\n              this.steps = [...this.steps];\n            }\n          }        \n        '}}}},__namedExportsOrder=["Progress"];Progress.parameters={...Progress.parameters,docs:{...Progress.parameters?.docs,source:{originalSource:'{\n  name: \'Progress\',\n  parameters: {\n    docs: {\n      source: {\n        type: \'code\',\n        code: `\n        @Component({\n            template: \n              <aui-steps\n                [orientation]="orientation"\n                [type]="\'progress\'"\n                [selectable]="selectable"\n                [steps]="steps"\n                (currentIndexChange)="currentIndexChange($event)"\n                (selectedIndexChange)="selectedIndexChange($event)"\n              ></aui-steps>\n              <div style="margin-top: 50px">\n                <button aui-button="primary" (click)="start()">Start</button>\n                <button aui-button="primary" (click)="complete()">Complete</button>\n                <button aui-button="primary" (click)="error()">Set Error</button>\n              </div>\n              <div>\n                Selectable: <aui-switch [(ngModel)]="selectable"></aui-switch>\n              </div>\n              <div>\n                Selected Index: {{ selectedIndex }}, Current index: {{ currentIndex }}\n              </div>\n            ,\n          })\n          export class BasicVerticalDemoComponent {\n            orientation: StepsOrientation = \'vertical\';\n            currentIndex = 0;\n            selectedIndex: number;\n            selectable = false;\n            steps: StepItem[] = [\n              {\n                label: \'Step 1\',\n              },\n              {\n                label: \'Step 2\',\n              },\n              {\n                label: \'Step 3\',\n              },\n              {\n                label: \'Step 4\',\n              },\n            ];\n            currentIndexChange(index: number) {\n              this.currentIndex = index;\n            }\n            selectedIndexChange(index: number) {\n              this.selectedIndex = index;\n            }\n            start() {\n              this.setState(StepState.Pending);\n            }\n            complete() {\n              this.setState(StepState.Done);\n            }\n            error() {\n              this.setState(StepState.Error);\n            }\n            private setState(state: StepState) {\n              this.steps[this.currentIndex].state = state;\n              this.steps = [...this.steps];\n            }\n          }        \n        `\n      }\n    }\n  }\n}',...Progress.parameters?.docs?.source}}}}}]);