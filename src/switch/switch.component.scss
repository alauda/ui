// stylelint-disable plugin/no-low-performance-animation-properties
@import '../theme/mixin';
@import '../theme/var';

$block: 'aui-switch';
$switch-width: 30px;
$switch-height: 16px;
$switch-border-width: 2px;
$switch-dot-with: $switch-height - ($switch-border-width * 2);

.#{$block} {
  display: inline-flex;
  position: relative;
  vertical-align: text-bottom;
  color: use-rgb(n-4);
  cursor: pointer;

  &__input {
    position: absolute;
    width: 0;
    height: 0;
    opacity: 0;
    margin: 0;
    &:focus + .#{$block}__bar {
      @include outline-shadow(primary);
    }
  }

  &__bar {
    display: inline-block;
    width: $switch-width;
    height: $switch-height;
    border-radius: $switch-height / 2;
    background-color: currentColor;
    transition: background-color $animation-duration;
    position: relative;
    vertical-align: middle;
    user-select: none;
  }

  &__dot {
    background-color: white;
    border-radius: 50%;
    width: $switch-dot-with;
    height: $switch-dot-with;
    position: absolute;
    top: $switch-border-width;
    left: $switch-border-width;
    transition: left $animation-duration;
  }

  &.isDisabled {
    color: use-rgb(n-7);
    cursor: not-allowed;

    .#{$block}__dot {
      @include theme-dark {
        background-color: use-rgb(n-4);
      }
    }
  }

  &.isChecked {
    color: use-rgb(primary);

    &.isDisabled {
      color: use-rgb(p-4);
    }

    .#{$block}__dot {
      left: $switch-width - $switch-dot-with - $switch-border-width;
    }
  }

  &.isLoading {
    .#{$block}__dot:after {
      content: '';
      position: absolute;
      top: $switch-border-width;
      bottom: $switch-border-width;
      left: $switch-border-width;
      right: $switch-border-width;
      border: 1px solid currentColor;
      border-top-color: transparent;
      border-radius: 50%;
      animation: spin 1s infinite linear;
    }
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
