@import '../theme/var';
@import '../theme/mixin';

$button-size: (
  large: (
    height: get-size(inline-height-l),
    padding-hoz: get-size(inline-padding-l),
    font-size: get-size(font-size-l),
    line-height: get-size(line-height-l),
  ),
  medium: (
    height: get-size(inline-height-m),
    padding-hoz: get-size(inline-padding-m),
    font-size: get-size(font-size-m),
    line-height: get-size(line-height-m),
  ),
  small: (
    height: get-size(inline-height-s),
    padding-hoz: get-size(inline-padding-s),
    font-size: get-size(font-size-m),
    line-height: get-size(line-height-m),
  ),
  mini: (
    height: get-size(inline-height-xs),
    padding-hoz: get-size(inline-padding-s),
    font-size: get-size(font-size-s),
    line-height: get-size(line-height-s),
  ),
);

@mixin text-button-sizes() {
  &.aui-button--large:not(.isSquare) {
    height: get-size(line-height-l);
    line-height: get-size(line-height-l);
    font-size: get-size(font-size-l);
  }

  &.aui-button--medium:not(.isSquare) {
    height: get-size(line-height-m);
    line-height: get-size(line-height-m);
    font-size: get-size(font-size-m);
  }

  &.aui-button--small:not(.isSquare) {
    height: get-size(line-height-m);
    line-height: get-size(line-height-m);
    font-size: get-size(font-size-m);
  }

  &.aui-button--mini:not(.isSquare) {
    height: get-size(line-height-s);
    line-height: get-size(line-height-s);
    font-size: get-size(font-size-s);
  }
}

@mixin colorful-button($color) {
  color: get-color(n-10);
  border-color: get-color($color);
  background-color: get-color($color);

  &:hover {
    border-color: get-color($color, 1);
    background-color: get-color($color, 1);
  }

  &:active,
  &.isActive {
    border-color: get-color($color, 0);
    background-color: get-color($color, 0);
  }

  &[disabled] {
    border-color: get-color($color, 4);
    background-color: get-color($color, 4);
  }

  &.cdk-focused:not(.cdk-mouse-focused) {
    @include outline-shadow($color);
  }

  &.isPlain {
    color: get-color($color);
    border-color: get-color($color);
    background-color: get-color($color, 6);

    &:hover {
      color: get-color($color, 1);
      border-color: get-color($color, 1);
      background-color: get-color($color, 7);
    }

    &:active,
    &.isActive {
      color: get-color($color, 0);
      border-color: get-color($color, 0);
      background-color: get-color($color, 5);
    }

    &[disabled] {
      color: get-color($color, 4);
      border-color: get-color($color, 4);
      background-color: get-color($color, 7);
    }

    &.cdk-focused:not(.cdk-mouse-focused) {
      @include outline-shadow(primary);
    }
  }
}

.aui-button {
  margin: 0;
  padding: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  position: relative;
  border-width: 1px;
  border-radius: get-size(border-radius-m);
  border-style: solid;
  background: none;
  outline: none;
  user-select: none;
  cursor: pointer;
  @include transition;

  &::-moz-focus-inner {
    border: none;
  }

  &[disabled] {
    cursor: not-allowed;
  }

  &__content {
    flex-shrink: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  @each $key in large medium small mini {
    $map: map-get($button-size, $key);

    &--#{$key} {
      height: map-get($map, height);
      font-size: map-get($map, font-size);
      line-height: map-get($map, line-height);

      .aui-button__content {
        padding: 0 map-get($map, padding-hoz);
      }

      &.isRound {
        border-radius: calc(#{map-get($map, height)} / 2);
      }

      &.isSquare {
        width: map-get($map, height);

        .aui-button__content {
          padding: 0;
        }
      }
    }
  }

  &--text {
    color: get-color(primary);
    border: none;
    background-color: transparent;

    .aui-button__content {
      padding: 0 4px;
    }

    @include text-button-sizes;

    &.isPlain {
      color: get-text-color(main);
    }

    &:hover {
      color: get-color(p-1);
      background-color: get-color(p-6);
    }

    &:active,
    &.isActive {
      color: get-color(p-0);
      background-color: get-color(p-5);
    }

    &[disabled] {
      color: get-color(p-4);
      background-color: transparent;
    }

    &.cdk-focused:not(.cdk-mouse-focused) {
      @include outline-shadow(primary);
    }
  }

  &--inline {
    color: get-color(primary);
    border: none;
    background-color: none;

    .aui-button__content {
      padding: 0;
    }

    @include text-button-sizes;

    &.isPlain {
      color: get-text-color(main);
    }

    &:hover {
      color: get-color(p-1);
    }

    &:active,
    &.isActive {
      color: get-color(p-0);
    }

    &[disabled] {
      color: get-color(p-4);
    }

    &.cdk-focused:not(.cdk-mouse-focused) {
      @include outline-shadow(primary);
    }
  }

  &--default {
    color: get-text-color(main);
    border-color: get-color(n-7);
    background-color: get-color(n-9);

    &:hover {
      color: get-color(primary);
      border-color: get-color(primary);
      background-color: get-color(p-6);
    }

    &:active,
    &.isActive {
      color: get-color(p-0);
      border-color: get-color(p-0);
      background-color: get-color(p-5);
    }

    &[disabled] {
      color: get-text-color(disabled);
      border-color: get-color(n-7);
      background-color: get-color(n-8);
    }

    &.cdk-focused:not(.cdk-mouse-focused) {
      @include outline-shadow(primary);
    }
  }

  &--primary {
    @include colorful-button(primary);
  }
  &--success {
    @include colorful-button(green);
  }
  &--warning {
    @include colorful-button(yellow);
  }
  &--danger {
    @include colorful-button(red);
  }

  &.isLoading {
    .aui-button__content {
      opacity: 0;
    }

    aui-icon {
      display: block;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }
}

.aui-button:not(:last-child) {
  margin: 0 get-size(spacing-m) 0 0;
}

.aui-button--text:not(:last-child) {
  margin: 0 get-size(spacing-s) 0 0;
}
