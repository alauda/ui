@import 'base-var';
@import 'var';

@mixin theme-light {
  :root {
    @content;
  }

  html[aui-color-mode='light'] {
    @content;
  }
}

@mixin theme-dark {
  @media (prefers-color-scheme: dark) {
    html[aui-color-mode='auto'] {
      @content;
    }
  }

  html[aui-color-mode='dark'] {
    @content;
  }
}

@mixin text-set($size: m, $color: none) {
  font-size: get-size(font-size-#{$size});
  line-height: get-size(line-height-#{$size});
  @if $color != none {
    color: get-text-color($color);
  }
}

@mixin icon-set($size: m, $color: none) {
  display: inline-flex;
  align-items: center;
  height: get-size(line-height-#{$size});
  font-size: get-size(font-size-#{$size});
  @if $color != none {
    color: get-text-color($color);
  }
}

// 使用 box-shadow 模拟带圆角的 outline
@mixin outline-shadow($color: primary) {
  box-shadow: 0 0 0 2px get-rgba($color, 0.16);
}

@mixin card-shadow() {
  box-shadow: 0 0 4px 0 get-rgba(n-1, 0.1);
}

@mixin popper-shadow() {
  box-shadow: 0 2px 8px 0 get-rgba(n-1, 0.2);
}

@mixin modal-shadow() {
  box-shadow: 0 4px 16px 0 get-rgba(n-1, 0.2);
}
@mixin page-header-shadow() {
  box-shadow: 0 1px 4px 0 get-rgba(n-1, 0.1);
}
@mixin page-snackbar-shadow() {
  box-shadow: 0 -1px 4px 0 get-rgba(n-1, 0.1);
}

@mixin transition($target: all) {
  transition: $target $animation-duration $animation-interpolation;
}

@mixin absolute-center() {
  margin: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin scroll-bar($color: rgba(0, 0, 0, 0.3)) {
  &::-webkit-scrollbar {
    width: 4px;
    height: 4px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: $color;
  }
}

@mixin clear-button() {
  border-radius: 50%;
  color: $input-suffix-icon-color;
  cursor: pointer;
  @include transition;

  &:hover {
    color: $input-bg-color;
    background-color: $input-suffix-icon-color;
  }
}

@mixin input-field-indicator() {
  &__icon-container {
    display: block;
    position: relative;
    color: get-color(n-4);
  }

  &__clear {
    display: none;

    .aui-icon {
      @include clear-button;
    }
  }

  &.isClearable:not(.isDisabled):hover & {
    &__indicator {
      display: none;
    }

    &__clear {
      display: flex;
    }
  }
}

@mixin input-error() {
  border-color: get-color(red) !important;

  &:focus,
  &.isFocused {
    @include outline-shadow(red);
  }
}

@mixin expand-button() {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: get-size(icon-size-m);
  height: get-size(icon-size-m);
  font-size: get-size(icon-size-m);
  line-height: get-size(icon-size-m);
  color: get-color(primary);
  background-color: get-color(p-6);
  border-radius: 50%;
  border: none;
  cursor: pointer;
  transition: transform 0.1s ease-in-out;

  aui-icon {
    display: block;
    width: get-size(icon-size-m);
    height: get-size(icon-size-m);
  }

  &:hover {
    background-color: get-color(p-7);
  }

  &:active {
    background-color: get-color(p-5);
  }

  &.isExpanded {
    transform: rotate(90deg);
    color: get-color(n-10);
    background-color: get-color(primary);

    &:hover {
      background-color: get-color(p-1);
    }

    &:active {
      background-color: get-color(p-0);
    }
  }

  &[disabled],
  &.isExpanded[disabled] {
    background-color: get-color(n-8);
    color: get-color(n-6);
    cursor: not-allowed;
  }
}

@mixin text-overflow {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin point($size, $color: #000) {
  width: $size;
  height: $size;
  border-radius: 50%;
  background-color: $color;
}

@mixin view-readonly {
  background-color: $input-bg-color;
  border-color: $input-border-color;
}

@mixin vertical-dashed-line($width: 1px, $color: 'n-7') {
  background: linear-gradient(
    to bottom,
    get-color($color),
    get-color($color) 8px,
    transparent 6px,
    transparent
  );
  width: $width;
  background-size: 100% 14px;
  height: 100%;
}
